# This is a basic workflow to help you get started with Actions

name: BuildRelease

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2 # $env:GITHUB_WORKSPACE
      
      - name: Build application
        run: |
          cd "$env:GITHUB_WORKSPACE"
          $msbuild = vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe | select-object -first 1
          & $msbuild .\AndysNMSWinStoreModFix.sln -Property:Configuration=Release -t:restore
          & $msbuild .\AndysNMSWinStoreModFix.sln -Property:Configuration=Release -t:Build
      
      - name: Get tag
        run: |
          $env:RELEASE_TAG=$($env:GITHUB_REF.Substring(10))
          echo "::set-env name=RELEASE_TAG::$($env:RELEASE_TAG)"
      
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Release ${{ env.RELEASE_TAG }}
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          draft: true
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.GITHUB_WORKSPACE }}/Release.zip
          asset_name: ANMSMEMSPC-${{ env.RELEASE_TAG }}.zip
          asset_content_type: application/zip
